//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Destination2.WebUi.Search.ServiceFlights {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightSearch", Namespace="http://schemas.datacontract.org/2004/07/Destination2.Services.Flights.Entities")]
    [System.SerializableAttribute()]
    public partial class FlightSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPackage {
            get {
                return this.IsPackageField;
            }
            set {
                if ((this.IsPackageField.Equals(value) != true)) {
                    this.IsPackageField = value;
                    this.RaisePropertyChanged("IsPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchType {
            get {
                return this.SearchTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchTypeField, value) != true)) {
                    this.SearchTypeField = value;
                    this.RaisePropertyChanged("SearchType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlightSearchResult", Namespace="http://schemas.datacontract.org/2004/07/Destination2.Services.Flights.Entities")]
    [System.SerializableAttribute()]
    public partial class FlightSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Destination2.WebUi.Search.ServiceFlights.FlightSearch FlightSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlightSearchIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Destination2.WebUi.Search.ServiceFlights.FlightSearch FlightSearch {
            get {
                return this.FlightSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightSearchField, value) != true)) {
                    this.FlightSearchField = value;
                    this.RaisePropertyChanged("FlightSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightSearchId {
            get {
                return this.FlightSearchIdField;
            }
            set {
                if ((this.FlightSearchIdField.Equals(value) != true)) {
                    this.FlightSearchIdField = value;
                    this.RaisePropertyChanged("FlightSearchId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceFlights.IFlightService")]
    public interface IFlightService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/StartSearch", ReplyAction="http://tempuri.org/IFlightService/StartSearchResponse")]
        Destination2.WebUi.Search.ServiceFlights.FlightSearchResult StartSearch(Destination2.WebUi.Search.ServiceFlights.FlightSearch flightSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightService/StartSearch", ReplyAction="http://tempuri.org/IFlightService/StartSearchResponse")]
        System.Threading.Tasks.Task<Destination2.WebUi.Search.ServiceFlights.FlightSearchResult> StartSearchAsync(Destination2.WebUi.Search.ServiceFlights.FlightSearch flightSearch);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightServiceChannel : Destination2.WebUi.Search.ServiceFlights.IFlightService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightServiceClient : System.ServiceModel.ClientBase<Destination2.WebUi.Search.ServiceFlights.IFlightService>, Destination2.WebUi.Search.ServiceFlights.IFlightService {
        
        public FlightServiceClient() {
        }
        
        public FlightServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Destination2.WebUi.Search.ServiceFlights.FlightSearchResult StartSearch(Destination2.WebUi.Search.ServiceFlights.FlightSearch flightSearch) {
            return base.Channel.StartSearch(flightSearch);
        }
        
        public System.Threading.Tasks.Task<Destination2.WebUi.Search.ServiceFlights.FlightSearchResult> StartSearchAsync(Destination2.WebUi.Search.ServiceFlights.FlightSearch flightSearch) {
            return base.Channel.StartSearchAsync(flightSearch);
        }
    }
}
